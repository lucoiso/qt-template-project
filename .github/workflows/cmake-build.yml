name: CMake Multi-Platform Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TESTS: true
  CONAN_PRESET: conan-release

permissions:
  actions: read
  deployments: write
  contents: write
  id-token: write
  security-events: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl

          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++

          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: (Windows) Set CONAN_USER_HOME
        if: matrix.os == 'windows-latest'
        run: |
          echo "CONAN_USER_HOME=C:\C2" >> $env:GITHUB_ENV

      - name: (Windows) Setup
        if: matrix.os == 'windows-latest'
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64

      - name: (Ubuntu) Setup
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-11 g++-11
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 110

      - name: (MacOS) Setup
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install pipx
          brew install conan

      - name: Install Build Tools
        uses: lukka/get-cmake@latest

      - name: Install Conan
        uses: turtlebrowser/get-conan@main

      - name: Create Conan Default Profile
        run: conan profile detect --force

      - name: Update Conan Configuration
        run: |
          conan config set general.revisions_enabled=1
          conan remote add conancenter https://center.conan.io || true

      - name: Install Conan Dependencies
        shell: bash
        run: |
          conan install . \
            --build=missing \
            --profile=Profiles/${{ matrix.os }}.conanprofile \
            -s build_type=${{ matrix.build_type }} \
            -c tools.system.package_manager:mode=install \
            -c tools.system.package_manager:sudo=True

      - name: Configure CMake
        run: cmake --preset ${{ env.CONAN_PRESET }}

      - name: Build Project
        run: cmake --build --preset ${{ env.CONAN_PRESET }}

      - name: Run Tests
        if: env.BUILD_TESTS == 'true'
        run: ctest --preset ${{ env.CONAN_PRESET }}
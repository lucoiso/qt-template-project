# Copyright Notices: [...]

MACRO(LU_SETUP_MODULE_DIRECTORIES TARGET_NAME)
    SET(PRIVATE_MODULES_BASE_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/Source")
    SET(PUBLIC_MODULES_BASE_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/Include/${TARGET_NAME}")

    FILE(GLOB_RECURSE PRIVATE_SOURCES "${PRIVATE_MODULES_BASE_DIRECTORY}/*.cpp")
    FILE(GLOB_RECURSE PUBLIC_SOURCES "${PUBLIC_MODULES_BASE_DIRECTORY}/*.hpp")
ENDMACRO()

MACRO(LU_INCLUDE_DIRECTORIES TARGET_NAME)
    TARGET_INCLUDE_DIRECTORIES(${TARGET_NAME} PUBLIC
                               "${PUBLIC_MODULES_BASE_DIRECTORY}/.."
    )
    TARGET_INCLUDE_DIRECTORIES(${TARGET_NAME} PRIVATE
                               "${PRIVATE_MODULES_BASE_DIRECTORY}"
                               "${PUBLIC_MODULES_BASE_DIRECTORY}"
    )
ENDMACRO()


MACRO(LU_INSTALL_RUNTIME_DLLS TARGET_NAME)
    INSTALL(FILES $<TARGET_RUNTIME_DLLS:${TARGET_NAME}> TYPE BIN)
ENDMACRO()


MACRO(LU_SETUP_QT_DEPLOY TARGET_NAME)
    SET(QT_CUSTOM_ARGUMENTS
        --dir "${CMAKE_CURRENT_BINARY_DIR}"
        --force
        --no-system-d3d-compiler
        --no-system-dxc-compiler
        --no-opengl-sw
        --no-ffmpeg
        --verbose 2
    )

    QT_GENERATE_DEPLOY_QML_APP_SCRIPT(
            TARGET ${TARGET_NAME}
            OUTPUT_SCRIPT QT_DEPLOY_SCRIPT
            NO_UNSUPPORTED_PLATFORM_ERROR
            NO_TRANSLATIONS
            NO_COMPILER_RUNTIME
            DEPLOY_USER_QML_MODULES_ON_UNSUPPORTED_PLATFORM
            MACOS_BUNDLE_POST_BUILD
            DEPLOY_TOOL_OPTIONS ${QT_CUSTOM_ARGUMENTS}
    )
    INSTALL(SCRIPT ${QT_DEPLOY_SCRIPT})
ENDMACRO()


MACRO(LU_INCLUDE_QML_CPP_SUBDIR TARGET_NAME SUBDIR_LIST)
    IF(NOT SUBDIR_LIST STREQUAL "")
        SET(QML_OBJECT_CPP_DIR "")

        FOREACH(SUBDIR ${SUBDIR_LIST})
            LIST(APPEND QML_OBJECT_CPP_DIR "${PUBLIC_MODULES_BASE_DIRECTORY}/${SUBDIR}")
        ENDFOREACH()

        TARGET_INCLUDE_DIRECTORIES(${TARGET_NAME} PRIVATE ${QML_OBJECT_CPP_DIR})
    ENDIF()
ENDMACRO()


MACRO(LU_FIND_AND_LINK_QT_COMPONENTS TARGET_NAME QT_COMPONENTS_LIST)
    IF(NOT QT_COMPONENTS_LIST STREQUAL "")
        FIND_PACKAGE(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS ${QT_COMPONENTS_LIST})

        SET(QT_LINK_COMPONENTS "")
        FOREACH(COMP ${QT_COMPONENTS_LIST})
            LIST(APPEND QT_LINK_COMPONENTS Qt${QT_VERSION_MAJOR}::${COMP})
        ENDFOREACH()

        TARGET_LINK_LIBRARIES(${TARGET_NAME} PRIVATE ${QT_LINK_COMPONENTS})
    ENDIF()
ENDMACRO()


MACRO(LU_ADD_LIBRARY)
    CMAKE_PARSE_ARGUMENTS(ARG "" "TARGET;TYPE" "QT_COMPONENTS;LINK_LIBRARIES" ${ARGN})

    LU_SETUP_MODULE_DIRECTORIES(${ARG_TARGET})
    QT_ADD_LIBRARY(${ARG_TARGET} ${ARG_TYPE} ${PRIVATE_SOURCES} ${PUBLIC_SOURCES})

    STRING(TOUPPER ${ARG_TARGET} BUILD_DLL_PREFIX)
    TARGET_COMPILE_DEFINITIONS(${ARG_TARGET} PRIVATE ${BUILD_DLL_PREFIX}_BUILD_DLL)

    SET_TARGET_PROPERTIES(${ARG_TARGET} PROPERTIES LINKER_LANGUAGE CXX)

    LU_FIND_AND_LINK_QT_COMPONENTS(${ARG_TARGET} "${ARG_QT_COMPONENTS}")
    LU_INCLUDE_DIRECTORIES(${ARG_TARGET})

    IF(ARG_LINK_LIBRARIES)
        TARGET_LINK_LIBRARIES(${ARG_TARGET} PRIVATE ${ARG_LINK_LIBRARIES})
    ENDIF()

    IF(ARG_TYPE STREQUAL "SHARED")
        LU_INSTALL_RUNTIME_DLLS(${ARG_TARGET})
    ENDIF()
ENDMACRO()


MACRO(LU_ADD_QML_LIBRARY)
    CMAKE_PARSE_ARGUMENTS(ARG "" "TARGET;TYPE;NO_PLUGIN" "QT_COMPONENTS;LINK_LIBRARIES;QML_CPP_SUBDIR" ${ARGN})

    LU_SETUP_MODULE_DIRECTORIES(${ARG_TARGET})

    SET(RESOURCES_BASE_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/Resources")
    SET(QML_MODULES_BASE_DIRECTORY "${RESOURCES_BASE_DIRECTORY}/QML")

    FILE(GLOB_RECURSE APP_RESOURCES "${RESOURCES_BASE_DIRECTORY}/*.qrc")
    FILE(GLOB_RECURSE QML_MODULES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "${QML_MODULES_BASE_DIRECTORY}/*.qml")
    FILE(GLOB_RECURSE APP_IMAGES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "${RESOURCES_BASE_DIRECTORY}/*.png")

    SET(QT_ADD_FLAGS "")
    IF(ARG_NO_PLUGIN)
        LIST(APPEND QT_ADD_FLAGS NO_PLUGIN)
    ENDIF()

    QT_ADD_QML_MODULE(${ARG_TARGET} ${ARG_TYPE}
                      URI ${ARG_TARGET}
                      ${QT_ADD_FLAGS}
                      VERSION 1.0
                      QML_FILES ${QML_MODULES}
                      SOURCES ${PRIVATE_SOURCES} ${PUBLIC_SOURCES} ${APP_RESOURCES}
                      RESOURCES ${APP_IMAGES}
                      RESOURCE_PREFIX /
    )

    STRING(TOUPPER ${ARG_TARGET} BUILD_DLL_PREFIX)
    TARGET_COMPILE_DEFINITIONS(${ARG_TARGET} PRIVATE ${BUILD_DLL_PREFIX}_BUILD_DLL)

    SET_TARGET_PROPERTIES(${ARG_TARGET} PROPERTIES LINKER_LANGUAGE CXX)

    LU_FIND_AND_LINK_QT_COMPONENTS(${ARG_TARGET} "${ARG_QT_COMPONENTS}")

    IF(ARG_LINK_LIBRARIES)
        TARGET_LINK_LIBRARIES(${ARG_TARGET} PRIVATE ${ARG_LINK_LIBRARIES})
    ENDIF()

    LU_INCLUDE_DIRECTORIES(${ARG_TARGET})
    LU_INCLUDE_QML_CPP_SUBDIR(${ARG_TARGET} "${ARG_QML_CPP_SUBDIR}")

    IF(ARG_TYPE STREQUAL "SHARED")
        LU_INSTALL_RUNTIME_DLLS(${ARG_TARGET})
    ENDIF()
ENDMACRO()


MACRO(LU_ADD_EXECUTABLE)
    CMAKE_PARSE_ARGUMENTS(ARG "" "TARGET" "QT_COMPONENTS;LINK_LIBRARIES" ${ARGN})

    LU_SETUP_MODULE_DIRECTORIES(${ARG_TARGET})

    SET(RESOURCES_BASE_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/Resources")
    SET(QML_MODULES_BASE_DIRECTORY "${RESOURCES_BASE_DIRECTORY}/QML")

    FILE(GLOB_RECURSE APP_RESOURCES "${RESOURCES_BASE_DIRECTORY}/*.qrc")
    FILE(GLOB_RECURSE QML_MODULES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "${QML_MODULES_BASE_DIRECTORY}/*.qml")
    FILE(GLOB_RECURSE APP_IMAGES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "${RESOURCES_BASE_DIRECTORY}/*.png")

    QT_ADD_EXECUTABLE(${ARG_TARGET} MANUAL_FINALIZATION ${PRIVATE_SOURCES})

    QT_ADD_QML_MODULE(${ARG_TARGET} ${ARG_TYPE}
                      URI ${ARG_TARGET}
                      NO_PLUGIN
                      VERSION 1.0
                      QML_FILES ${QML_MODULES}
                      SOURCES ${PRIVATE_SOURCES} ${PUBLIC_SOURCES} ${APP_RESOURCES}
                      RESOURCES ${APP_IMAGES}
                      RESOURCE_PREFIX /
    )

    LU_FIND_AND_LINK_QT_COMPONENTS(${ARG_TARGET} "${ARG_QT_COMPONENTS}")

    IF(ARG_LINK_LIBRARIES)
        TARGET_LINK_LIBRARIES(${ARG_TARGET} PRIVATE ${ARG_LINK_LIBRARIES})
    ENDIF()

    SET_TARGET_PROPERTIES(${ARG_TARGET} PROPERTIES
                          LINKER_LANGUAGE CXX
                          MACOSX_BUNDLE_GUI_IDENTIFIER com.example.${ARG_TARGET}
                          MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
                          MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
                          MACOSX_BUNDLE TRUE
                          WIN32_EXECUTABLE TRUE
    )

    QT_FINALIZE_TARGET(${ARG_TARGET})
    LU_INSTALL_RUNTIME_DLLS(${ARG_TARGET})
    LU_SETUP_QT_DEPLOY(${ARG_TARGET})
ENDMACRO()